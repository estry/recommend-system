# -*- coding: utf-8 -*-
"""model1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E37sn1O0tZ-s70MlWQa15kf-u8AgrvEu
"""

import pandas as pd
import numpy as np
import math
from ast import literal_eval
from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer
from sklearn.metrics.pairwise import linear_kernel, cosine_similarity
from sklearn.decomposition import TruncatedSVD

class ModelFirst:
    def model1(self, selected_genres):
        df = pd.read_csv('/content/drive/MyDrive/data/user_pref.csv')
        new_movie_data = pd.read_csv('/content/drive/MyDrive/data/new_movie_data.csv')
        first_genre_index = df[selected_genres[0]].sort_values(ascending=False).head(1400).index
        second_genre_index = df[selected_genres[1]].sort_values(ascending=False).head(1400).index
        common_index = []
        for idx in first_genre_index:
            if idx in second_genre_index:
                common_index.append(idx)

        common_df = pd.DataFrame(index=range(0,len(common_index)), columns=df.columns)
        i = 0
        for idx in common_index:
            common_df.iloc[i] = df.iloc[idx]
            i = i + 1

        common_np = common_df.to_numpy()
        # 장르 유사도 계산
        vector = TfidfVectorizer()
        trans_data = np.array(new_movie_data['genres'].tolist())
        movie_genre_tfidf = vector.fit_transform(trans_data).toarray()

        SVD = TruncatedSVD(n_components=8)
        matrix = SVD.fit_transform(movie_genre_tfidf.T)
        matrix.shape
        corr = np.corrcoef(matrix)

        genre_title = df.columns
        genre_list = list(genre_title)
        first_corr_idx = genre_list.index(selected_genres[0])
        second_corr_idx = genre_list.index(selected_genres[1])
        common_corr = corr[first_corr_idx][second_corr_idx]

        result_np = common_np * common_corr
        result_df = pd.DataFrame(result_np, columns=genre_title)
        result = result_df.max().idxmax()
        temp = selected_genres
        result = list(result.split())
        result = temp+result
        return result

if __name__ == "__main__":
    selected_genre = ['Horror', 'Thriller']
    r = model1(selected_genre)
    print(r)